# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tgJw7pTHlD-am0tDTvx4v76D19p77jEU
"""

import numpy as np 
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

df= pd.read_csv('/content/ETH_1H.csv')
df

projection = 14    # variable for number of days to predict for future.
# create a new column named prediction 

df['Prediction'] = df [['Close']].shift(-projection)
df.head(20)

df.tail()

sns.heatmap(df.corr(), annot = True,cmap= 'coolwarm')

#create independent dataset (x)
x = np.array(df[['Close']]) 
x=x[:-projection]
print(x)

y= df['Prediction'].values
y= y[:-projection]
print(y)

x_train, x_test, y_train, y_test = train_test_split(x,y, test_size = .20)

plt.scatter(x_test, y_test, color = "red")
plt.title("Etherium price vs Predicted Price after 14 days (Training set)")
plt.xlabel("Etherium Price")
plt.ylabel("Prediction Price")
plt.show()

linReg = LinearRegression()
#train the model
linReg.fit(x_train, y_train)

#test the model using score 
linReg_confidense = linReg.score(x_test, y_test)
print("Linear regression confidence :", linReg_confidense)

linReg_prediction = linReg.predict(x_test)
print(linReg_prediction)

y_test

plt.scatter(x_test, y_test, color = "red")
plt.plot(x_train, linReg.predict(x_train), color = "green")
plt.title("Etherium price vs Predicted Price after 14 days (Training set)")
plt.xlabel("Etherium Price")
plt.ylabel("Predicted Price")
plt.show()

import pickle
# save the model to disk
filename = 'ether_predictor.pkl'
pickle.dump(linReg, open(filename, 'wb'))

# load the model from disk
loaded_model = pickle.load(open(filename, 'rb'))
result = loaded_model.score(x_test, y_test)
print(result)

loaded_model.predict(x_test)